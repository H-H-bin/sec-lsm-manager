###########################################################################
# Copyright 2020-2021 IoT.bzh Company
#
# Author: Arthur Guyader <arthur.guyader@iot.bzh>
#
# $RP_BEGIN_LICENSE$
# Commercial License Usage
#  Licensees holding valid commercial IoT.bzh licenses may use this file in
#  accordance with the commercial license agreement provided with the
#  Software or, alternatively, in accordance with the terms contained in
#  a written agreement between you and The IoT.bzh Company. For licensing terms
#  and conditions see https://www.iot.bzh/terms-conditions. For further
#  information use the contact form at https://www.iot.bzh/contact.
#
# GNU General Public License Usage
#  Alternatively, this file may be used under the terms of the GNU General
#  Public license version 3. This license is as published by the Free Software
#  Foundation and appearing in the file LICENSE.GPLv3 included in the packaging
#  of this file. Please review the following information to ensure the GNU
#  General Public License requirements will be met
#  https://www.gnu.org/licenses/gpl-3.0.html.
# $RP_END_LICENSE$
###########################################################################


policy_module(~ID~,1.0)

# Types Definition
type ~APP~_t;
type ~APP~_lib_t;
type ~APP~_conf_t;
type ~APP~_exec_t;
type ~APP~_icon_t;
type ~APP~_data_t;
type ~APP~_http_t;

gen_require(`
    type bin_t;
    type unreserved_port_t;
    type unconfined_t;
    type unconfined_service_t;
')

# Domain definition
init_domain(~APP~_t, ~APP~_exec_t);
domain_entry_file(~APP~_t, bin_t);


# Load shared library
allow ~APP~_t ~APP~_lib_t:file mmap_exec_file_perms;
allow ~APP~_t ~APP~_lib_t:dir list_dir_perms;

# Allow create socket
platform_var_rw_dir(~APP~_t);
corenet_tcp_bind_generic_node(~APP~_t);
corenet_tcp_bind_all_unreserved_ports(~APP~_t);
allow ~APP~_t self:tcp_socket create_stream_socket_perms;
allow ~APP~_t self:unix_dgram_socket create_stream_socket_perms;

# Allow read /etc/resolv.conf
sysnet_read_config(~APP~_t);

# connect to init with unix socket
init_stream_connect(~APP~_t);
init_rw_stream_sockets(~APP~_t);

# Send messages to kernel unix datagram sockets
kernel_dgram_send(~APP~_t);

# Associate domain to filesystems
fs_associate(~APP~_lib_t);

allow init_t ~APP~_t:process {siginh};

# Allow unconfined to install app
~APP~_install(unconfined_t);
